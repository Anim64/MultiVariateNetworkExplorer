@model MultiVariateNetworkExplorer2.Models.ErrorInputModel
@{
    ViewData["Title"] = "Home Page";
}


@section StylesDev {
    <link rel="stylesheet" href="~/css/index.css" type="text/css" asp-append-version="true" />
    <link href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
}

@section StylesProd {
    <link rel="stylesheet" href="~/css/index.min.css" type="text/css" asp-append-version="true" />
    <link href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
}

@section ScriptsDev {
    <script src="~/js/index.js" asp-append-version="true"></script>
    <script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
}

@section ScriptsProd {
    <script src="~/js/index.min.js" asp-append-version="true"></script>
    <script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
}



<h1>Welcome to Multi Variate Network Explorer</h1>



<form method="post" asp-action="Graph" asp-controller="Home" enctype="multipart/form-data">
    <div class="file-buttons">
        <div class="file-button">
            <input class="inputfile" type="file" id="fileVector" name="files" data-caption="{filePath}">
            <label for="fileVector"><strong>Choose a file with vector data</strong></label>
        </div>
        <div class="file-button">
            <input class="inputfile" type="file" id="fileNetwork" name="files" data-caption="{filePath}">
            <label for="fileNetwork"><strong>Choose a file with network</strong></label>
        </div>
    </div>
    <div class="parameters">
        <div class="collapsible-parameters-btn">
            <i class='fas fa-chevron-up'></i>
            <span>Data parameters</span>
        </div>
        <div class="collapsible-parameters-content">
            <label for="directed"><span>Is the network directed?</span></label>
            <select name="directed" , id="directed">
                <option value="0">Yes</option>
                <option selected value="1">No</option>
            </select>

            <label for="header"><span>Does the vector data file contain headers?</span></label>
            <select name="header" , id="header">
                <option selected value="0">Yes</option>
                <option value="1">No</option>
            </select>

            <label for="missingvalues"><span>Enter the character representing missing data (leave empty if no character is used)</span></label>
            <input type="text" id="missingvalues" name="missingvalues" placeholder="eg: -, --, NA etc." value="@Model.MissingValues"/>

        </div>

        <div class="collapsible-parameters-btn">
            <i class='fas fa-chevron-up'></i>
            <span>Separators</span>
        </div>
        <div class="collapsible-parameters-content">
            <label for="separators">Enter the data separating characters (separated by SPACE):</label>
            <input type="text" id="separators" name="separators" value="@Model.Separators"/>
        </div>

        <div class="collapsible-parameters-btn">
            <i class='fas fa-chevron-up'></i>
            <span>Group and Id Parameters</span>
        </div>
        <div class="collapsible-parameters-content">
            <label for="grouping">Initialize with community detection</label>
            <select name="grouping" , id="grouping">
                <option value="0">Yes</option>
                <option selected value="1">No</option>
            </select>
            <label for="groupColumn">Enter the column name or number with groups (optional)</label>
            <input type="text" id="groupColumn" name="groupColumn" value="@Model.GroupColumn"/>

            <label for="idColumn">Enter the column name or number with ids (optional)</label>
            <input type="text" id="idColumn" name="idColumn" value="@Model.IdColumn"/>
        </div>

        <div class="collapsible-parameters-btn">
            <i class='fas fa-chevron-up'></i>
            <span>Conversion Parameters</span>
        </div>
        <div class="collapsible-parameters-content" id="conversion-collapsible-content">
            
            <h4 id="algorithm-parameters-headline">Algorithm Parameters</h4>
            <label for="convert">Choose a conversion algorithm:</label>
                <select name="convert" id="convert" onchange="displayAlgorithmParameters()">
                <option value="LRNet">LRNet</option>
                <option value="EpsilonKNN">Epsilon and kNN</option>
            </select>

            <div class="algorithm-parameters-container" >
                <div class="algorithm-parameters" id="epsilon-parameters">
                        <label for="epsilonRadius">Choose a radius</label>
                        <input type="number" id="epsilonRadius" name="algsParams[0]" step="0.00001" min="0" max="1" value="1" />

                        <label for="kNNmin">Choose a minimal number of neighbours</label>
                        <input type="number" id="kNNmin" name="algsParams[1]" min="0" value="1" />
                </div>
            </div>

            <h4 id="metric-parameters-headline">Metric Parameters</h4>
            <label for="convert">Choose a metric:</label>
            <select name="metric" id="metric" onchange="displayMetricParameters()">
                <option value="GaussKernel">Gaussian Kernel</option>
                <option value="CosineSimilarity">Cosine Similarity</option>
                <option value="EuclideanKernel">Euclidean Distance</option>
            </select>

            <div class="metric-parameters-container">
                <div class="metric-parameters" id="gauss-parameters">
                    <label for="sigma">Choose a standard deviation</label>
                    <input type="number" id="sigma" name="metricParams[0]" step="0.001" min="0" value="1" />
                </div>
            </div>
            
           
        </div>
    </div>
    <div class="submit-buttons">
        <input type="submit" class="submit-btn" value="Upload" />
        <input type="button" class="clear-btn" value="Clear" />
    </div>
    <p class="error-display">
        @Model.ErrorMessage
    </p>
</form>









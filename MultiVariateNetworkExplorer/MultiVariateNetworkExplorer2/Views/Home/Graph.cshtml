@model MultiVariateNetworkExplorer2.Models.GraphModel
@{
    ViewData["Title"] = "Graph";
}



@section Styles {
    <link rel="stylesheet" href="~/css/controls.css" type="text/css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/selections.css" type="text/css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/attributes.css" type="text/css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/graph.css" type="text/css" asp-append-version="true" />
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" type="text/css" />
    <link href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="~/css/node_properties.css" type="text/css" asp-append-version="true" />
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
}


<div class="main-div">
    <div class="column left-col" id="leftpanel">
        <div class="navigation">
            <div class="tab-nav">
                <a class="tab-link tab-active" href="#" onclick="openTab(event, 'attributes', 'leftpanel', '.column-content')" id="defaultTab">Attributes</a>
            </div>
            <div class="tab-nav">
                <a class="tab-link" href="#" onclick="openTab(event, 'settings', 'leftpanel', '.column-content')">Graph Settings</a>
            </div>
            <div></div>
        </div>
        <div class="column-content attributes" id="attributes">
            @foreach (var pair in Model.Mvn.VectorData.NumAtrrExtremes)
            {
                <div class="numeric">
                    <h4>@pair.Key</h4>
                    <div id="@(pair.Key + "-slider")"></div>
                    <script>createDoubleSlider('@(pair.Key + "-slider")', '@(pair.Key + "-sliderOutputMin")', '@(pair.Key + "-sliderOutputMax")', @pair.Value.MinAttrValue, @pair.Value.MaxAttrValue)</script>
                    <div class="row">
                        <div class="col-md-4">
                            <input type="number" id="@(pair.Key + "-sliderOutputMin")" min="@pair.Value.MinAttrValue" max="@pair.Value.MaxAttrValue" value="@pair.Value.MinAttrValue" step="0.01" onchange="$('#' + '@(pair.Key + "-slider")').slider('option', 'value', this.value); filterByMinValue(this.value, '@pair.Key');">
                        </div>
                        <div class="col-md-4 col-md-offset-4">
                            <input type="number" id="@(pair.Key + "-sliderOutputMax")" min="@pair.Value.MinAttrValue" max="@pair.Value.MaxAttrValue" value="@pair.Value.MaxAttrValue" step="0.01" onchange="$('#' + '@(pair.Key + "-slider")').slider('option', 'value', this.value); filterByMaxValue(this.value, '@pair.Key');">
                        </div>
                    </div>
                </div>
            }

            @foreach (var pair in Model.Mvn.VectorData.CatAttrValues)
            {
                <div class="categorical">
                    <h4>@pair.Key</h4>
                    <div class="checkboxes">
                        @foreach (string category in pair.Value)
                        {
                            <label for="@(category + "-checkbox")">@(category)</label>
                            <input type="checkbox" id="@(category + "-checkbox")" value="@category" onchange="filterByCategory('@pair.Key', '@category', this.checked)" checked />
                        }
                    </div>
                </div>
            }

        </div>
        <div class="column-content controls" id="settings">
            <div class="force alpha">
                <p><label>alpha</label> Simulation activity</p>
                <div class="alpha_bar" onclick="updateAll();"><div id="alpha_value"></div></div>
            </div>
            <div class="force">
                <p><label>center</label> Shifts the view, so the graph is centered at this location.</p>
                <label>
                    x
                    <output id="center_XSliderOutput">.5</output>
                    <input type="range" min="0" max="1" value=".5" step="0.01" oninput="d3.select('#center_XSliderOutput').text(value); forceProperties.center.x = value; updateAll();">
                </label>
                <label>
                    y
                    <output id="center_YSliderOutput">.5</output>
                    <input type="range" min="0" max="1" value=".5" step="0.01" oninput="d3.select('#center_YSliderOutput').text(value); forceProperties.center.y=value; updateAll();">
                </label>
            </div>

            <div class="force">
                <p><label><input type="checkbox" checked onchange="forceProperties.charge.enabled = this.checked; updateAll();"> charge</label> Attracts (+) or repels (-) nodes to/from each other.</p>
                <label title="Negative strength repels nodes. Positive strength attracts nodes.">
                    strength
                    <output id="charge_StrengthSliderOutput">-30</output>
                    <input type="range" min="-200" max="50" value="-30" step=".1" oninput="d3.select('#charge_StrengthSliderOutput').text(value); forceProperties.charge.strength=value; updateAll();">
                </label>
                <label title="Minimum distance where force is applied">
                    distanceMin
                    <output id="charge_distanceMinSliderOutput">1</output>
                    <input type="range" min="0" max="50" value="1" step=".1" oninput="d3.select('#charge_distanceMinSliderOutput').text(value); forceProperties.charge.distanceMin=value; updateAll();">
                </label>
                <label title="Maximum distance where force is applied">
                    distanceMax
                    <output id="charge_distanceMaxSliderOutput">2000</output>
                    <input type="range" min="0" max="2000" value="2000" step=".1" oninput="d3.select('#charge_distanceMaxSliderOutput').text(value); forceProperties.charge.distanceMax=value; updateAll();">
                </label>
            </div>

            <div class="force">
                <p><label><input type="checkbox" checked onchange="forceProperties.collide.enabled = this.checked; updateAll();"> collide</label> Prevents nodes from overlapping</p>
                <label>
                    strength
                    <output id="collide_StrengthSliderOutput">.7</output>
                    <input type="range" min="0" max="2" value=".7" step=".1" oninput="d3.select('#collide_StrengthSliderOutput').text(value); forceProperties.collide.strength=value; updateAll();">
                </label>
                <label title="Size of nodes">
                    radius
                    <output id="collide_radiusSliderOutput">5</output>
                    <input type="range" min="0" max="100" value="5" step="1" oninput="d3.select('#collide_radiusSliderOutput').text(value); forceProperties.collide.radius=value; updateAll();">
                </label>
                <label title="Higher values increase rigidity of the nodes (WARNING: high values are computationally expensive)">
                    iterations
                    <output id="collide_iterationsSliderOutput">1</output>
                    <input type="range" min="1" max="10" value="1" step="1" oninput="d3.select('#collide_iterationsSliderOutput').text(value); forceProperties.collide.iterations=value; updateAll();">
                </label>
            </div>
            <!--
        <div class="force">
            <p><label><input type="checkbox" checked onchange="forceProperties.forceX.enabled = this.checked; updateAll();"> forceX</label> Acts like gravity. Pulls all points towards an X location.</p>
            <label>
                strength
                <output id="forceX_StrengthSliderOutput">.1</output>
                <input type="range" min="0" max="1" value=".1" step="0.01" oninput="d3.select('#forceX_StrengthSliderOutput').text(value); forceProperties.forceX.strength=value; updateAll();">
            </label>
            <label title="The X location that the force will push the nodes to (NOTE: This demo multiplies by the svg width)">
                x
                <output id="forceX_XSliderOutput">.5</output>
                <input type="range" min="0" max="1" value=".5" step="0.01" oninput="d3.select('#forceX_XSliderOutput').text(value); forceProperties.forceX.x=value; updateAll();">
            </label>
        </div>
        <div class="force">
            <p><label><input type="checkbox" checked onchange="forceProperties.forceY.enabled = this.checked; updateAll();"> forceY</label> Acts like gravity. Pulls all points towards a Y location.</p>
            <label>
                strength
                <output id="forceY_StrengthSliderOutput">.1</output>
                <input type="range" min="0" max="1" value=".1" step="0.01" oninput="d3.select('#forceY_StrengthSliderOutput').text(value); forceProperties.forceY.strength=value; updateAll();">
            </label>
            <label title="The Y location that the force will push the nodes to (NOTE: This demo multiplies by the svg height)">
                y
                <output id="forceY_YSliderOutput">.5</output>
                <input type="range" min="0" max="1" value=".5" step="0.01" oninput="d3.select('#forceY_YSliderOutput').text(value); forceProperties.forceY.y=value; updateAll(); ">
            </label>
        </div>
            -->
            <div class="force">
                <p><label><input type="checkbox" checked onchange="forceProperties.link.enabled = this.checked; updateAll();"> link</label> Sets link length</p>
                <label title="The force will push/pull nodes to make links this long">
                    distance
                    <output id="link_DistanceSliderOutput">30</output>
                    <input type="range" min="0" max="100" value="30" step="1" oninput="d3.select('#link_DistanceSliderOutput').text(value); forceProperties.link.distance=value; updateAll();">
                </label>
                <label title="Higher values increase rigidity of the links (WARNING: high values are computationally expensive)">
                    iterations
                    <output id="link_IterationsSliderOutput">1</output>
                    <input type="range" min="1" max="10" value="1" step="1" oninput="d3.select('#link_IterationsSliderOutput').text(value); forceProperties.link.iterations=value; updateAll();">
                </label>
            </div>
            <div class="force">
                <p><label>Project</label> Modify position of a node based on its attribute value</p>
                <label>
                    X Axis
                    @Html.DropDownList("droplist_x", new SelectList(Model.Mvn.VectorData.NumAtrrExtremes.Keys), "<None>", new { @class = "form-control", onchange = "projectAttribute('x', this.value);" })
                </label>
                <label>
                    Y Axis
                    @Html.DropDownList("droplist_y", new SelectList(Model.Mvn.VectorData.NumAtrrExtremes.Keys), "<None>", new { @class = "form-control", onchange = "projectAttribute('y', this.value);" })
                </label>
            </div>
        </div>
        <script>
            // Get the element with id="defaultOpen" and click on it
            
        </script>
        
    </div>
    <div id="graph" class="column graph-col">
        <div class="navigation">
            <div class="tab-nav">
                <a class="tab-link tab-active" href="#" onclick="openTab(event, 'networkGraph', 'graph', '.graph-content')" id="defaultGraphTab">Network Graph</a>
            </div>
            <div class="tab-nav">
                <a class="tab-link" href="#" onclick="openTab(event, 'selectionGraph', 'graph', '.graph-content') ">Selection Graph</a>
            </div>
            <div></div>
        </div>
        <div id="networkGraph" class="graph-content">
            <svg></svg>
            <script src="https://d3js.org/d3-color.v1.min.js"></script>
            <script src="https://d3js.org/d3-interpolate.v1.min.js"></script>
            <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
            <script src="https://d3js.org/d3.v4.min.js" charset="utf-8"></script>
            <script src="~/js/d3v4-brush-lite.js" asp-append-version="true"></script>
            <script src="~/js/graph.js" asp-append-version="true"></script>
            <script>
            drawNetwork(@Html.Raw(Model.Graph));
            </script>
        </div>
        <div id="selectionGraph" class="graph-content">
            <svg></svg>
            <script src="https://d3js.org/d3.v4.js" charset="utf-8"></script>
            <script>
            drawSelectionNetwork(@Html.Raw(Model.Selection));
            </script>
        </div>
        <script>
            // Get the element with id="defaultOpen" and click on it

            //$('#defaultGraphTab').click();
        </script>
    </div>

    <div class="column right-col" id="nodes">
        <div class="navigation">
            <div class="tab-nav">
                <a class="tab-link tab-active" href="#" onclick="openTab(event, 'accordion', 'nodes', '.column-content')">Node Properties</a>
            </div>
            <div class="tab-nav">
                <a class="tab-link" href="#" onclick="openTab(event, 'selections', 'nodes', '.column-content')">Selection properties</a>
            </div>
            <div></div>
        </div>
        <div class="nodes column-content" id="accordion" role="tablist" aria-multiselectable="true">
            
            @for (int node = 0; node < Model.Mvn.VectorData.DataCount; node=node+5)
            {
                <div class="node-row-group" id="@($"node-row-group-{ node }")">
                
                    @for(int nodeRowIdx = 0; nodeRowIdx < 5; nodeRowIdx++)
                    {
                        if((node + nodeRowIdx) < Model.Mvn.VectorData.DataCount)
                        {
                            <div class="node-heading" role="tab" id="@("heading-" + Model.Mvn.IdColumn[node + nodeRowIdx])">
                                
                                <a role="button" id="@("btn-node-" + Model.Mvn.IdColumn[node + nodeRowIdx])" href="#" onclick="toggleNodeDetails(@(node + nodeRowIdx), '@($"heading-{ Model.Mvn.IdColumn[node + nodeRowIdx] }")', '@($"node-detail-{node}")', '@($"node-row-group-{ node }")')">
                                    @(Model.Mvn.IdColumn[node + nodeRowIdx])
                                </a>
                                
                            </div>
                        }
                        
                    }
                    
                    <div id="@($"node-detail-{node}")" class="node-data" aria-labelledby="@($"heading-{ Model.Mvn.IdColumn[node] }")">
                        @foreach (var attribute in Model.Mvn.VectorData.Columns())
                        {
                            
                            <div class="node-property-group">
                                <label for="@(Model.Mvn.IdColumn[node] + "-" + attribute)">@(attribute + ":")</label>
                                <input type="text" id="@(Model.Mvn.IdColumn[node] + "-" + attribute)" value="" readonly />
                            </div>
                        }
                    </div>
                    
                </div>
                


            }
            <script>
                updateNodeGroups();
            </script>
        </div>
        <div class="column-content selections" id="selections">
            <div>
                <input type="button" onclick="addNewSelection()" value="Add New Selection" />
                <input type="button" onclick="deleteAllSelections()" value="Delete All Selection" />
            </div>
            <div class="panel-group wrap" id="list-selections" role="tablist" aria-multiselectable="true">
                @if (Model.Mvn.Partition != null)
                {
                    foreach (var selection in Model.Mvn.Partition.Values.Distinct())
                    {
                        <text>
                            <div class="panel" id="@("selection_panel_" + selection)">
                                <div class="panel-heading" role="tab" id="@("heading_selection_" + selection)">
                                    <input type="color" id="@("selection_color_" + selection)" onchange="changeGroupColour(this.value, @selection)" />
                                    <ul class="list-inline m-0" style="float: right;">
                                        <li class="list-inline-item">
                                            <button class="btn btn-danger btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Add Selected Nodes To This Group" onclick="addNodesToSelection(@selection.ToString())"><i class="fa fa-plus-square"></i></button>
                                        </li>
                                        <li class="list-inline-item">
                                            <button class="btn btn-danger btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Delete" onclick="deleteSelection(@selection.ToString())"><i class="fa fa-trash"></i></button>
                                        </li>
                                    </ul>
                                    <h4 class="panel-title">
                                        @("Selection " + selection)
                                    </h4>
                                </div>
                            </div>
                        </text>
                    }
                }

            </div>
        </div>
    </div>
</div>
<div class="bottom-panel">
    <input type="button" id="communityDetectionBtn" onclick="requestCommunityDetection()" value="Detect Communities" />
</div>















